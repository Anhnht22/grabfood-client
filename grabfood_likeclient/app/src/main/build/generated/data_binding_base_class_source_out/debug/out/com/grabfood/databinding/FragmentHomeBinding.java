// Generated by view binder compiler. Do not edit!
package com.grabfood.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.grabfood.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final EditText editText4;

  @NonNull
  public final RecyclerView homeHorRec;

  @NonNull
  public final RecyclerView homeVerRec;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView9;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull EditText editText4,
      @NonNull RecyclerView homeHorRec, @NonNull RecyclerView homeVerRec,
      @NonNull TextView textView7, @NonNull TextView textView9) {
    this.rootView = rootView;
    this.editText4 = editText4;
    this.homeHorRec = homeHorRec;
    this.homeVerRec = homeVerRec;
    this.textView7 = textView7;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editText4;
      EditText editText4 = ViewBindings.findChildViewById(rootView, id);
      if (editText4 == null) {
        break missingId;
      }

      id = R.id.home_hor_rec;
      RecyclerView homeHorRec = ViewBindings.findChildViewById(rootView, id);
      if (homeHorRec == null) {
        break missingId;
      }

      id = R.id.home_ver_rec;
      RecyclerView homeVerRec = ViewBindings.findChildViewById(rootView, id);
      if (homeVerRec == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, editText4, homeHorRec, homeVerRec,
          textView7, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
